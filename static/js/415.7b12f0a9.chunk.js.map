{"version":3,"file":"static/js/415.7b12f0a9.chunk.js","mappings":"yNAIMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA+BxB,UA7Ba,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAFiB,wCAQjB,6GAEyBC,EAAAA,EAAAA,gBAFzB,OAEUC,EAFV,OAGIJ,EAAkBI,EAAOC,KAAKC,SAHlC,gDAKIC,QAAQC,IAAR,MALJ,yBAOIN,GAAa,GAPjB,6EARiB,sBAmBjB,OAfAO,EAAAA,EAAAA,YAAU,YAJO,mCAKfC,EACD,GAAE,KAcD,6BACC,eAAIC,MAAO,CAAEC,UAAW,SAAUC,MAAO,UAAWC,OAAQ,UAA5D,4OAGEb,GAAY,SAAC,IAAD,KAAa,SAACL,EAAD,CAAYmB,WAAYhB,MAGvD,C,8FC/BDiB,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHd,EAAgB,CACrBe,cADqB,WACJ,OAAD,qHACKF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD7C,cACdE,EADc,yBAEbA,GAFa,4CAGrB,EACKC,aALqB,SAKRC,GAAQ,OAAD,qHACCL,EAAAA,EAAAA,IAAA,+BACCC,EADD,kBACkBI,IAFnB,cAClBF,EADkB,yBAIjBA,GAJiB,4CAKzB,EACKG,UAXqB,SAWXC,GAAK,OAAD,qHACOP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,IADzC,cACZE,EADY,yBAEXA,GAFW,4CAGnB,EACKK,cAfqB,SAePD,GAAK,OAAD,qHACGP,EAAAA,EAAAA,IAAA,iBACbO,EADa,4BACSN,IAFZ,cAChBE,EADgB,yBAIfA,GAJe,4CAKvB,EACKM,iBArBqB,SAqBJF,GAAK,OAAD,qHACAP,EAAAA,EAAAA,IAAA,iBACbO,EADa,4BACSN,IAFT,cACnBE,EADmB,yBAIlBA,GAJkB,4CAK1B,E","sources":["pages/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import React, { useState, useEffect, lazy } from 'react';\nimport { themoviedbAPI } from 'services/themoviedbAPI';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesList = lazy(() => import('components/MoviesList/MoviesList'));\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchTrendingMovies();\n  }, []);\n\n  async function fetchTrendingMovies() {\n    try {\n      const movies = await themoviedbAPI.fetchTrending();\n      setTrendingMovies(movies.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <main>\n     <h3 style={{ textAlign: 'center', color: '#2a2a2a', margin: '10px 0' }}>\n        Фільми для родинного перегляду і не тільки\n      </h3>\n      {isLoading ? <Loader /> : <MoviesList moviesList={trendingMovies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'eb8158c708d801ebc7494af7f42d91eb';\n\nexport const themoviedbAPI = {\n  async fetchTrending() {\n    const moviesData = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return moviesData;\n  },\n  async fetchByQuery(query) {\n    const moviesData = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return moviesData;\n  },\n  async fetchById(id) {\n    const moviesData = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return moviesData;\n  },\n  async fetchCastById(id) {\n    const moviesData = await axios.get(\n      `/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return moviesData;\n  },\n  async fetchReviewsById(id) {\n    const moviesData = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return moviesData;\n  },\n};\n"],"names":["MoviesList","lazy","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","themoviedbAPI","movies","data","results","console","log","useEffect","fetchTrendingMovies","style","textAlign","color","margin","moviesList","axios","API_KEY","fetchTrending","moviesData","fetchByQuery","query","fetchById","id","fetchCastById","fetchReviewsById"],"sourceRoot":""}