{"version":3,"file":"static/js/76.787e4f23.chunk.js","mappings":"sQACA,EAA4B,wBAA5B,EAA+D,uBAA/D,EAA4F,kBAA5F,EAAqH,mB,SCuDrH,MAjDA,WACE,OAA0CA,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAHM,wCASd,WAAkCA,GAAlC,uFAEID,GAAa,GAFjB,SAGuBG,EAAAA,EAAAA,cAA4BF,GAHnD,OAGUG,EAHV,OAIIN,EAAiBM,EAAKC,MAJ1B,gDAMIC,QAAQC,IAAR,MANJ,yBAQIP,GAAa,GARjB,4EATc,wBAqBd,OAhBAQ,EAAAA,EAAAA,YAAU,YALI,oCAMZC,CAAmBR,EACpB,GAAE,CAACA,KAeF,gCACGF,IAAa,SAACW,EAAA,EAAD,IACbb,IACC,eAAIc,UAAWC,EAAf,SACGf,EAAcO,KAAKS,KAAI,SAAAC,GACtB,OACE,gBAAIH,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXG,MAAM,MACNC,IACEF,EAAMG,aAAN,yCACsCH,EAAMG,cACxCC,EAENC,IAAKL,EAAMM,QAEb,cAAGT,UAAWC,EAAd,SAAuBE,EAAMM,SAXCN,EAAMO,GAczC,QAKV,C,8FCpDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHpB,EAAgB,CACrBqB,cADqB,WACJ,OAAD,qHACKF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD7C,cACdE,EADc,yBAEbA,GAFa,4CAGrB,EACKC,aALqB,SAKRC,GAAQ,OAAD,qHACCL,EAAAA,EAAAA,IAAA,+BACCC,EADD,kBACkBI,IAFnB,cAClBF,EADkB,yBAIjBA,GAJiB,4CAKzB,EACKG,UAXqB,SAWXP,GAAK,OAAD,qHACOC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IADzC,cACZE,EADY,yBAEXA,GAFW,4CAGnB,EACKI,cAfqB,SAePR,GAAK,OAAD,qHACGC,EAAAA,EAAAA,IAAA,iBACbD,EADa,4BACSE,IAFZ,cAChBE,EADgB,yBAIfA,GAJe,4CAKvB,EACKK,iBArBqB,SAqBJT,GAAK,OAAD,qHACAC,EAAAA,EAAAA,IAAA,iBACbD,EADa,4BACSE,IAFT,cACnBE,EADmB,yBAIlBA,GAJkB,4CAK1B,E","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castCards\":\"Cast_castCards__IjCNo\",\"castCard\":\"Cast_castCard__m8Shz\",\"img\":\"Cast_img__-isbW\",\"text\":\"Cast_text__P2vgu\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { themoviedbAPI } from 'services/themoviedbAPI';\nimport avatar from '../../assets/images/avatar-placeholder-1-225x300-1-200x300.png';\nimport s from './Cast.module.css';\n\nfunction Cast() {\n  const [movieCastById, setMovieCastById] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCastById(movieId);\n  }, [movieId]);\n\n  async function fetchMovieCastById(movieId) {\n    try {\n      setIsLoading(true);\n      const cast = await themoviedbAPI.fetchCastById(movieId);\n      setMovieCastById(cast.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieCastById && (\n        <ul className={s.castCards}>\n          {movieCastById.cast.map(actor => {\n            return (\n              <li className={s.castCard} key={actor.id}>\n                <img\n                  className={s.img}\n                  width=\"200\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                      : avatar\n                  }\n                  alt={actor.name}\n                />\n                <p className={s.text}>{actor.name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'd753c7c06260672f2cde39e68c02f927';\n\nexport const themoviedbAPI = {\n  async fetchTrending() {\n    const moviesData = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return moviesData;\n  },\n  async fetchByQuery(query) {\n    const moviesData = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return moviesData;\n  },\n  async fetchById(id) {\n    const moviesData = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return moviesData;\n  },\n  async fetchCastById(id) {\n    const moviesData = await axios.get(\n      `/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return moviesData;\n  },\n  async fetchReviewsById(id) {\n    const moviesData = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return moviesData;\n  },\n};\n"],"names":["useState","movieCastById","setMovieCastById","isLoading","setIsLoading","movieId","useParams","themoviedbAPI","cast","data","console","log","useEffect","fetchMovieCastById","Loader","className","s","map","actor","width","src","profile_path","avatar","alt","name","id","axios","API_KEY","fetchTrending","moviesData","fetchByQuery","query","fetchById","fetchCastById","fetchReviewsById"],"sourceRoot":""}