{"version":3,"file":"static/js/168.cc6523da.chunk.js","mappings":"wQACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,aAAe,+B,SCmEvJ,MA7DA,WACE,OAAgDA,EAAAA,EAAAA,UAAS,MAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAHS,wCASjB,WAAqCA,GAArC,uFAEID,GAAa,GAFjB,SAG0BG,EAAAA,EAAAA,iBAA+BF,GAHzD,OAGUG,EAHV,OAIIN,EAAoBM,EAAQC,KAAKC,SAJrC,gDAMIC,QAAQC,IAAR,MANJ,yBAQIR,GAAa,GARjB,4EATiB,wBAqBjB,OAhBAS,EAAAA,EAAAA,YAAU,YALO,oCAMfC,CAAsBT,EACvB,GAAE,CAACA,KAeF,gCACGF,IAAa,SAACY,EAAA,EAAD,IACbd,GAAoBA,EAAiBe,OAAS,GAC7C,eAAIC,UAAWC,EAAAA,KAAf,SACGjB,EAAiBkB,KAAI,SAAAC,GACpB,OACE,gBAAIH,UAAWC,EAAAA,KAAf,WACE,iBAAKD,UAAWC,EAAAA,MAAhB,UACGE,EAAOC,eAAeC,YACrBF,EAAOC,eAAeC,YAAYC,SAAS,aACzC,gBACEC,MAAM,KACNC,IAAKL,EAAOC,eAAeC,YAAYI,MAAM,GAC7CC,IAAKP,EAAOQ,UAGd,gBACEJ,MAAM,KACNC,IAAG,yCAAoCL,EAAOC,eAAeC,aAC7DK,IAAKP,EAAOQ,UAIhB,gBAAKJ,MAAM,KAAKC,IAAKI,EAAUF,IAAKP,EAAOQ,UAE7C,eAAIX,UAAWC,EAAAA,MAAf,SAAyBE,EAAOQ,aAElC,cAAGX,UAAWC,EAAAA,KAAd,SAAuBE,EAAOU,YArBJV,EAAOW,GAwBtC,OAGH,eAAId,UAAWC,EAAAA,aAAf,6CAIP,C,8FChEDc,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEH1B,EAAgB,CACrB2B,cADqB,WACJ,OAAD,qHACKF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD7C,cACdE,EADc,yBAEbA,GAFa,4CAGrB,EACKC,aALqB,SAKRC,GAAQ,OAAD,qHACCL,EAAAA,EAAAA,IAAA,+BACCC,EADD,kBACkBI,IAFnB,cAClBF,EADkB,yBAIjBA,GAJiB,4CAKzB,EACKG,UAXqB,SAWXP,GAAK,OAAD,qHACOC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IADzC,cACZE,EADY,yBAEXA,GAFW,4CAGnB,EACKI,cAfqB,SAePR,GAAK,OAAD,qHACGC,EAAAA,EAAAA,IAAA,iBACbD,EADa,4BACSE,IAFZ,cAChBE,EADgB,yBAIfA,GAJe,4CAKvB,EACKK,iBArBqB,SAqBJT,GAAK,OAAD,qHACAC,EAAAA,EAAAA,IAAA,iBACbD,EADa,4BACSE,IAFT,cACnBE,EADmB,yBAIlBA,GAJkB,4CAK1B,E","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/themoviedbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"thumb\":\"Reviews_thumb__ZtaIS\",\"title\":\"Reviews_title__t265C\",\"notification\":\"Reviews_notification__vpvwx\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { themoviedbAPI } from 'services/themoviedbAPI';\nimport Loader from 'components/Loader/Loader';\nimport noavatar from '../../assets/images/avatar-placeholder-1-225x300-1-200x300.png';\nimport s from './Reviews.module.css';\n\nfunction Reviews() {\n  const [movieReviewsById, setMovieReviewsById] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviewsById(movieId);\n  }, [movieId]);\n\n  async function fetchMovieReviewsById(movieId) {\n    try {\n      setIsLoading(true);\n      const reviews = await themoviedbAPI.fetchReviewsById(movieId);\n      setMovieReviewsById(reviews.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieReviewsById && movieReviewsById.length > 0 ? (\n        <ul className={s.list}>\n          {movieReviewsById.map(review => {\n            return (\n              <li className={s.item} key={review.id}>\n                <div className={s.thumb}>\n                  {review.author_details.avatar_path ? (\n                    review.author_details.avatar_path.includes('gravatar') ? (\n                      <img\n                        width=\"40\"\n                        src={review.author_details.avatar_path.slice(1)}\n                        alt={review.author}\n                      />\n                    ) : (\n                      <img\n                        width=\"40\"\n                        src={`https://image.tmdb.org/t/p/w500${review.author_details.avatar_path}`}\n                        alt={review.author}\n                      />\n                    )\n                  ) : (\n                    <img width=\"40\" src={noavatar} alt={review.author} />\n                  )}\n                  <h3 className={s.title}>{review.author}</h3>\n                </div>\n                <p className={s.text}>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h2 className={s.notification}>We don`t have any reviews yet</h2>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'eb8158c708d801ebc7494af7f42d91eb';\n\nexport const themoviedbAPI = {\n  async fetchTrending() {\n    const moviesData = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return moviesData;\n  },\n  async fetchByQuery(query) {\n    const moviesData = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return moviesData;\n  },\n  async fetchById(id) {\n    const moviesData = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return moviesData;\n  },\n  async fetchCastById(id) {\n    const moviesData = await axios.get(\n      `/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return moviesData;\n  },\n  async fetchReviewsById(id) {\n    const moviesData = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return moviesData;\n  },\n};\n"],"names":["useState","movieReviewsById","setMovieReviewsById","isLoading","setIsLoading","movieId","useParams","themoviedbAPI","reviews","data","results","console","log","useEffect","fetchMovieReviewsById","Loader","length","className","s","map","review","author_details","avatar_path","includes","width","src","slice","alt","author","noavatar","content","id","axios","API_KEY","fetchTrending","moviesData","fetchByQuery","query","fetchById","fetchCastById","fetchReviewsById"],"sourceRoot":""}